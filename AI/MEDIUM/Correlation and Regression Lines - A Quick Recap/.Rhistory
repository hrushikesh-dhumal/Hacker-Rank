}
####part b
par(mfrow=c(1,2))
plot(b_theta)
plot(o_theta)
# From the graphs I observe that orange crabs have larger body depth and larger rear width than blue crabs.
# The graph for orange graph shows that the data is more closer/ comcentrated as compared to the blue crabs.
#####part c
mean(b_ORU<o_ROU)
###so the conditional probably equal to 1
par(mfrow=c(1,2))
plot(b_ORU)
plot(o_ROU)
library(MCMCpack)
library(mvtnorm)
bdata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/bluecrab.dat')
odata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/orangecrab.dat')
colnames(bdata)<-c("Y1","Y2")
colnames(odata)<-c("Y1","Y2")
bmu0<-c(mean(bdata$Y1), mean(bdata$Y2))
omu0<-c(mean(odata$Y1), mean(odata$Y2))
bybar<-apply(bdata,2,mean)
oybar<-apply(odata,2,mean)
bl0<-bs0<-cov(bdata)
ol0<-os0<-cov(odata)
b_sigma<-bs0
o_sigma<-os0
nu0<-4
n<-dim(bdata)[1]
b_theta<-b_sigma<-NULL
o_theta<-o_sigma<-NULL
o_ROU<-b_ORU<-NULL
set.seed(1)
for (s in 1:10000){
bln<-solve(solve(bl0)+n*solve(b_sigma))
b_theta<-rmvnorm(1,bmun,bln)
bsn<-bs0+(t(bdata)-c(b_theta))%*%t(t(bdata)-c(b_theta))
b_sigma<-solve(rwish(nu0+n,solve(bsn)))
b_ORU<-b_sigma[2]/sqrt(b_sigma[1]*b_sigma[4])
b_theta<-rbind(b_theta,b_theta)
b_sigma<-rbind(b_sigma,c(b_sigma))
b_ORU<-rbind(b_ORU,b_ORU)
}
set.seed(1)
for (s in 1:10000){
oln<-solve(solve(ol0)+n*solve(o_sigma))
bmun<-bln%*%(solve(bl0)%*%bmu0+n*solve(b_sigma)%*%bybar)
omun<-oln%*%(solve(ol0)%*%omu0+n*solve(o_sigma)%*%oybar)
o_theta<-rmvnorm(1,omun,oln)
osn<-os0+(t(odata)-c(o_theta))%*%t(t(odata)-c(o_theta))
o_sigma<-solve(rwish(nu0+n,solve(osn)))
bln<-solve(solve(bl0)+n*solve(b_sigma))
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,476,195)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 1')
lines(x,dgamma(x,476,195))
### situation ii
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 2')
lines(x,dgamma(x,258.2,96))
### situation iii
theta_1<-rgamma(10000,2287.2,1038)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2287.2,1038),type="l",main='posterior function part 3')
lines(x,dgamma(x,258.2,96))
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,476,195)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 1')
lines(x,dgamma(x,476,195))
### situation ii
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 2')
lines(x,dgamma(x,258.2,96))
### situation iii
theta_1<-rgamma(10000,2287.2,1038)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2287.2,1038),type="l",main='posterior function part 3')
lines(x,dgamma(x,258.2,96))
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,476,195)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 1')
lines(x,dgamma(x,476,195))
### situation ii
theta_1<-rgamma(10000,2505,1137)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2505,1137),type="l",main='posterior function part 2')
lines(x,dgamma(x,258.2,96))
### situation iii
theta_1<-rgamma(10000,2287.2,1038)
theta_2<-rgamma(10000,258.2,96)
mean(theta_2>theta_1)
x<-seq(0,3,length=1000)
plot(x,dgamma(x,2287.2,1038),type="l",main='posterior function part 3')
lines(x,dgamma(x,258.2,96))
library(pscl)
####part a), school 1)
post_s2<-rigamma(10000,13.5,194.74)
post_theta<-rnorm(10000,9.292,sqrt(post_s2/26))
quantile(post_theta,c(.025,.975))
quantile(sqrt(post_s2),c(0.025,0.975))
####part a), school 2)
post_s2<-rigamma(10000,12.5,227.23)
post_theta<-rnorm(10000,6.948,sqrt(post_s2/24))
quantile(post_theta,c(.025,.975))
quantile(sqrt(post_s2),c(0.025,0.975))
####part a), school 3)
post_s2<-rigamma(10000,11,144.03)
post_theta<-rnorm(10000,7.812,sqrt(post_s2/21))
quantile(post_theta,c(.025,.975))
quantile(sqrt(post_s2),c(0.025,0.975))
#######part b
post_s2.1<-rigamma(10000,13.5,194.74)
post_theta.1<-rnorm(10000,9.292,sqrt(post_s2/26))
post_s2.2<-rigamma(10000,12.5,227.23)
post_theta.2<-rnorm(10000,6.948,sqrt(post_s2/24))
post_s2.3<-rigamma(10000,11,144.03)
post_theta.3<-rnorm(10000,7.812,sqrt(post_s2/21))
mean(post_theta.1>post_theta.2 & post_theta.2>post_theta.3)
mean(post_theta.1>post_theta.3 & post_theta.3>post_theta.2)
mean(post_theta.2>post_theta.3 & post_theta.3>post_theta.1)
mean(post_theta.2>post_theta.1 & post_theta.1>post_theta.3)
mean(post_theta.3>post_theta.1 & post_theta.1>post_theta.2)
mean(post_theta.3>post_theta.2 & post_theta.2>post_theta.1)
######part c
post_y1<-rnorm(10000,post_theta.1,sqrt(post_s2.1))
post_y2<-rnorm(10000,post_theta.2,sqrt(post_s2.2))
post_y3<-rnorm(10000,post_theta.3,sqrt(post_s2.3))
mean(post_y1>post_y2 & post_y2>post_y3)
mean(post_y1>post_y3 & post_y3>post_y2)
mean(post_y2>post_y3 & post_y3>post_y1)
mean(post_y2>post_y1 & post_y1>post_y3)
mean(post_y3>post_y1 & post_y1>post_y2)
mean(post_y3>post_y2 & post_y2>post_y1)
######part d
mean(post_theta.1>post_theta.2 & post_theta.1>post_theta.3 & post_y1>post_y2 & post_y1>post_y3)
mean(post_theta.1>post_theta.2 & post_theta.1>post_theta.3)
mean( post_y1>post_y2 & post_y1>post_y3)
glucose<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/glucose.dat',header=T)
h<-hist(glucose[,1],col="lightblue",border="pink",main="histogram of glucose.dat",sub='',xlab='')
x<-glucose[,1]
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
yfit<-yfit*diff(h$mids[1:2])*length(x)
lines(xfit,yfit,col="red",lwd=2)
library(coda)
my_data <-
read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/glucose.dat',header=T)
a=1
b=1
n = length(my_data[,1])
y = my_data[,1]
mu0 = 120
tau0 = sqrt(200)
sigma0 = sqrt(1000)
nu0 = 10
p = rbeta(1,a,b)
xi = rbinom(n,1,p)
k = sum(xi==0)
theta_1 = rnorm(1,mu0,tau0)
theta_2 = rnorm(1,mu0,tau0)
s1 = sum((y[xi==0]-theta_1)^2)/(k-1)
s2 = sum((y[xi==1]-theta_2)^2)/(n-k-1)
sigma1 = sqrt(1/rgamma(1,nu0/2,nu0*(sigma0^2)/2))
sigma2 = sqrt(1/rgamma(1,nu0/2,nu0*(sigma0^2)/2))
Yt<-r1<-r2<-NULL
set.seed(1)
for(s in 1:10000){
p = rbeta(1,a+k,b+n-k)
xi = rbinom(n,1,p)
for(ind in 1:n){
w1 = p*dnorm(y[ind],theta_1,sigma1)
w2 = (1-p)*dnorm(y[ind],theta_2,sigma2)
xi[ind] = sample(c(0,1),1,prob = c(w1/(w1+w2),w2/(w1+w2)))
}
k = sum(xi==0)
if(k > 0){
ybar1 = mean(y[xi==0])
}
else{
ybar1 = 0
}
if(n - k>0){
ybar2 = mean(y[xi==1])
}
else{
ybar2 = 0
}
mun1 = (mu0/(tau0^2)+k*ybar1/(sigma1^2))/(1/(tau0^2)+k/(sigma1^2))
taun1 = sqrt(1/(1/(tau0^2)+k/(sigma1^2)))
mun2 = (mu0/(tau0^2)+k*ybar2/(sigma2^2))/(1/(tau0^2)+(n-k)/(sigma2^2))
taun2 = sqrt(1/(1/(tau0^2)+(n-k)/(sigma2^2)))
theta_1 = rnorm(1,mun1,taun1)
theta_2 = rnorm(1,mun2,taun2)
s1 = sum((y[xi<0.5]-theta_1)^2)/(k-1)
s2 = sum((y[xi>=0.5]-theta_2)^2)/(n-k-1)
sigma1 = sqrt(1/rgamma(1,(nu0+k)/2,(nu0*(sigma0)^2+sum((y[xi<0.5]-theta_1)^2))/2))
sigma2 = sqrt(1/rgamma(1,(nu0+n-k)/2,(nu0*(sigma0)^2+sum((y[xi<0.5]-theta_1)^2))/2))
test = sample(c(0,1),1,prob=c(p,1-p));
if(test==0){
Yt[s] = rnorm(1,theta_1,sigma1)
}
else{
Yt[s] = rnorm(1,theta_1,sigma1)
}
r1[s] = min(theta_1,theta_2)
r2[s] = max(theta_1,theta_2)
}
par(mfrow=c(2,1))
acf(r1)
acf(r2)
bdata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/bluecrab.dat')
odata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/orangecrab.dat')
colnames(bdata)<-c("Y1","Y2")
colnames(odata)<-c("Y1","Y2")
bmu0<-c(mean(bdata$Y1), mean(bdata$Y2))
omu0<-c(mean(odata$Y1), mean(odata$Y2))
bybar<-apply(bdata,2,mean)
oybar<-apply(odata,2,mean)
bl0<-bs0<-cov(bdata)
ol0<-os0<-cov(odata)
b_sigma<-bs0
o_sigma<-os0
nu0<-4
n<-dim(bdata)[1]
b_theta<-b_sigma<-NULL
o_theta<-o_sigma<-NULL
o_ROU<-b_ORU<-NULL
set.seed(1)
s = 1L
bln<-solve(solve(bl0)+n*solve(b_sigma))
bl0<-bs0<-cov(bdata)
bdata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/bluecrab.dat')
odata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/orangecrab.dat')
colnames(bdata)<-c("Y1","Y2")
colnames(odata)<-c("Y1","Y2")
bmu0<-c(mean(bdata$Y1), mean(bdata$Y2))
omu0<-c(mean(odata$Y1), mean(odata$Y2))
bybar<-apply(bdata,2,mean)
oybar<-apply(odata,2,mean)
bl0<-bs0<-cov(bdata)
ol0<-os0<-cov(odata)
View(bl0)
solve(bl0)
solve(b_sigma)
b_sigma<-bs0
o_sigma<-os0
bln<-solve(solve(bl0)+n*solve(b_sigma))
for (s in 1:10000){
bln<-solve(solve(bl0)+n*solve(b_sigma))
bmun<-bln%*%(solve(bl0)%*%bmu0+n*solve(b_sigma)%*%bybar)
b_theta<-rmvnorm(1,bmun,bln)
bsn<-bs0+(t(bdata)-c(b_theta))%*%t(t(bdata)-c(b_theta))
b_sigma<-solve(rwish(nu0+n,solve(bsn)))
b_ORU<-b_sigma[2]/sqrt(b_sigma[1]*b_sigma[4])
b_theta<-rbind(b_theta,b_theta)
b_sigma<-rbind(b_sigma,c(b_sigma))
b_ORU<-rbind(b_ORU,b_ORU)
}
library(MCMCpack)
library(mvtnorm)
bdata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/bluecrab.dat')
odata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/orangecrab.dat')
colnames(bdata)<-c("Y1","Y2")
colnames(odata)<-c("Y1","Y2")
bmu0<-c(mean(bdata$Y1), mean(bdata$Y2))
omu0<-c(mean(odata$Y1), mean(odata$Y2))
bybar<-apply(bdata,2,mean)
oybar<-apply(odata,2,mean)
bl0<-bs0<-cov(bdata)
ol0<-os0<-cov(odata)
b_sigma<-bs0
o_sigma<-os0
nu0<-4
n<-dim(bdata)[1]
b_theta<-b_sigma<-NULL
o_theta<-o_sigma<-NULL
nu0<-4
n<-dim(bdata)[1]
b_theta<-b_sigma<-NULL
o_theta<-o_sigma<-NULL
o_ROU<-b_ORU<-NULL
s = 2
s = 1
bln<-solve(solve(bl0)+n*solve(
b_sigma))
bdata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/bluecrab.dat')
odata<-read.table('http://www.stat.washington.edu/hoff/Book/Data/hwdata/orangecrab.dat')
colnames(bdata)<-c("Y1","Y2")
colnames(odata)<-c("Y1","Y2")
bmu0<-c(mean(bdata$Y1), mean(bdata$Y2))
omu0<-c(mean(odata$Y1), mean(odata$Y2))
bybar<-apply(bdata,2,mean)
oybar<-apply(odata,2,mean)
bl0<-bs0<-cov(bdata)
ol0<-os0<-cov(odata)
b_sigma<-bs0
o_sigma<-os0
nu0<-4
n<-dim(bdata)[1]
set.seed(1)
for (s in 1:10000){
bln<-solve(solve(bl0)+n*solve(b_sigma))
bmun<-bln%*%(solve(bl0)%*%bmu0+n*solve(b_sigma)%*%bybar)
b_theta<-rmvnorm(1,bmun,bln)
bsn<-bs0+(t(bdata)-c(b_theta))%*%t(t(bdata)-c(b_theta))
b_sigma<-solve(rwish(nu0+n,solve(bsn)))
b_ORU<-b_sigma[2]/sqrt(b_sigma[1]*b_sigma[4])
b_theta<-rbind(b_theta,b_theta)
b_sigma<-rbind(b_sigma,c(b_sigma))
b_ORU<-rbind(b_ORU,b_ORU)
}
View(bln)
bln<-solve(solve(bl0)+n*solve(b_sigma))
?read.csv
x  = y = 1:100
plot(x, y)
y = 1 /x
plot(x, y)
plot(log(x), log(y))
fit = lm(y~x)
abline(fit)
plot(dnorm(x))
x <- seq(-4, 4, length=100)
hx <- dnorm(x)
degf <- c(1, 3, 8, 30)
colors <- c("red", "blue", "darkgreen", "gold", "black")
labels <- c("df=1", "df=3", "df=8", "df=30", "normal")
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
x  = y = 1:100
plot(x, y)
y = 1 /x
plot(x, y)
plot(log(x), log(y))
fit = lm(y~x)
abline(fit)
x  = y = 1:100
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(y))
hx <- dnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Density", main="Comparison of t Distributions")
x  = y = 1:100
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(y))
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Probability", main="Comparison of t Distributions")
x  = y = seq(-1, 1, 100)
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(y))
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Probability", main="Comparison of t Distributions")
x  = y = seq(0, 1, 100)
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(y))
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Probability", main="Comparison of t Distributions")
?seq
x  = y = seq(0, 1, by = 100)
x  = y = seq(1, 10, by = 100)
x  = y = seq(1, 10, length = 100)
x  = y = seq(0, 1, length = 100)
x  = y = seq(0, 1, length = 100)
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(y))
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Probability", main="Comparison of t Distributions")
plot(log(x), log(1/x))
x  = y = seq(0, 1, length = 100)
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
x  = y = seq(1, 100, length = 100)
plot(x, y)
y = 1 /x
plot(x, y)
fit = lm(y~x)
abline(fit)
plot(log(x), log(1/x))
x = c(24, 34, 35, 56, 33, 11, 75, 98)
hx <- pnorm(x)
plot(x, hx, type="l", lty=2, xlab="x value",
ylab="Probability", main="Comparison of t Distributions")
plot(x, x/ sum(x))
plot(x)
plot(x/ sum(x))
?corr
?cor
setwd("D:/_Active_Projects/hacker-rank/AI/MEDIUM/Correlation and Regression Lines - A Quick Recap 1")
physics_scores = c(15,  12,  8,   8,  7,   7,   7,   6,   5,   3)
history_scores = c(10,  25,  17,  11,  13,  17,  20,  13,  9,   15)
cor(physics_scores, history_scores)
fit.lin  = lm(physics_scores~history_scores)
coef(fit.lin)
fit.lin  = lm(history_scores~physics_scores)
coef(fit.lin)
specify_decimal <- function(x, k) format(round(x, k), nsmall=k)
cor.sp = cor(physics_scores, history_scores)
specify_decimal(cor.sp, 3)
noquote(cor.sp)
cat(cor.sp)
cat(specify_decimal(cor.sp, 3))
cat(specify_decimal(coef))
coef = coef(fit.lin)
cat(specify_decimal(coef))
cat(specify_decimal(coef, 3))
coef = coef(fit.lin)[2]
cat(specify_decimal(coef, 3))
?predict
setwd("D:/_Active_Projects/hacker-rank/AI/MEDIUM/Correlation and Regression Lines - A Quick Recap")
predict(fit.lin, newdata = 15)
x = cor(c(15,  12,  8,   8,  7,   7,   7,   6,   5,   3), c(10,  25,  17,  11,  13,  17,  20,  13,  9,   15))
res = format(round(x, 3), nsmall = 3)
physics_scores = c(15,  12,  8,   8,  7,   7,   7,   6,   5,   3)
history_scores = c(10,  25,  17,  11,  13,  17,  20,  13,  9,   15)
specify_decimal <- function(x, k) format(round(x, k), nsmall=k)
cor.sp = cor(physics_scores, history_scores)
cat(specify_decimal(cor.sp, 3))
fit.lin  = lm(history_scores~physics_scores)
coef = coef(fit.lin)[2]
cat(specify_decimal(coef, 3))
predict(fit.lin, newdata = 15)
predict(fit.lin, newdata = c(15))
predict(fit.lin, newdata = history_scores)
data = data.frame(c(physics_scores, history_scores))
View(data)
data = data.frame(physics_scores, history_scores)
View(data)
cor.sp = cor(physics_scores, history_scores, data = data)
cat(specify_decimal(cor.sp, 3))
dF = data.frame(physics_scores, history_scores)
specify_decimal <- function(x, k) format(round(x, k), nsmall=k)
cor.sp = cor(physics_scores, history_scores, data = dF)
cor.sp = cor(physics_scores, history_scores)
cat(specify_decimal(cor.sp, 3))
fit.lin  = lm(history_scores~physics_scores, data = dF)
coef = coef(fit.lin)[2]
cat(specify_decimal(coef, 3))
predict(fit.lin, newdata = history_scores)
predict(fit.lin, newdata = dF$history_scores)
dF = data.frame(physics_scores, history_scores)
print_decimal <- function(x, k) cat(format(round(x, k), nsmall=k))
cor.sp = cor(physics_scores, history_scores)
print_decimal(specify_decimal(cor.sp, 3))
print_decimal(cor.sp, 3)
print_decimal(coef, 3)
x = cor(c(15,  12,  8,   8,  7,   7,   7,   6,   5,   3), c(10,  25,  17,  11,  13,  17,  20,  13,  9,   15))
res = format(round(x, 3), nsmall = 3)
physics_scores = c(15,  12,  8,   8,  7,   7,   7,   6,   5,   3)
history_scores = c(10,  25,  17,  11,  13,  17,  20,  13,  9,   15)
dF = data.frame(physics_scores, history_scores)
printDecimal <- function(x, k) cat(format(round(x, k), nsmall=k))
cor.sp = cor(physics_scores, history_scores)
printDecimal(cor.sp, 3)
fit.lin  = lm(history_scores~physics_scores, data = dF)
coef = coef(fit.lin)[2]
printDecimal(coef, 3)
predict(fit.lin, newdata = dF$history_scores)
new <- data.frame(history_scores = 15)
predict(fit.lin, newdata = new$history_scores)
predict(fit.lin, newdata = new)
new <- data.frame(physics_scores = 15)
predict(fit.lin, newdata = new)
res = predict(fit.lin, newdata = new)
printDecimal(res, 3)
